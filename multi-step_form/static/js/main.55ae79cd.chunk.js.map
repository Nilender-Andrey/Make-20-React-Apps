{"version":3,"sources":["components/SignupForm/Animator.tsx","components/SignupForm/SignupFormContext.tsx","components/SignupForm/1ProfileForm.tsx","components/SignupForm/2SocialForm.tsx","components/SignupForm/3Review.tsx","components/SignupForm/StepLinks.tsx","components/SignupForm/SignupForm.tsx","App.tsx","index.tsx"],"names":["Animator","children","motion","div","style","position","transition","initial","x","scale","opacity","animate","exit","SignupFormContext","createContext","undefined","SignupFormProvider","useState","name","email","profile","setProfile","twitter","facebook","social","setSocial","Provider","value","useSignupForm","context","useContext","Error","ProfileForm","useForm","register","handleSubmit","errors","formState","history","useHistory","className","onSubmit","data","push","noValidate","required","type","placeholder","defaultValue","pattern","colorScheme","fontSize","w","SocialForm","justifyContent","marginRight","onClick","Review","e","preventDefault","alert","StepLinks","isProfileDone","length","isSocialDone","SignupForm","location","useLocation","AnimatePresence","exact","path","render","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.55ae79cd.chunk.js","sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\n\ntype AnimatorPropsType = {\n  children: React.ReactNode;\n};\n\nexport default function Animator({ children }:AnimatorPropsType) {\n  return (\n    <motion.div\n      style={{ position: 'absolute', transition: '0.2s' }}\n      initial={{\n        x: 300, scale: 0.7, opacity: 0,\n      }}\n      animate={{\n        x: 0, scale: 1, opacity: 1,\n      }}\n      exit={{\n        x: -300, scale: 0.7, opacity: 0,\n      }}\n\n    >\n      {children}\n    </motion.div>\n  );\n}\n","import React, { createContext, useContext, useState } from 'react';\n\ntype SignupFormProviderType = {\n  children: React.ReactNode;\n};\n\ntype ProfileType = {\n  name: string;\n  email: string;\n}\n\ntype SocialType = {\n  twitter: string;\n  facebook: string;\n}\n\nexport interface SignupFormContextInterface {\n  profile: ProfileType;\n  social: SocialType;\n\n  setProfile: React.Dispatch<\n    React.SetStateAction<{ name: string; email: string }>\n  >;\n  setSocial: React.Dispatch<\n    React.SetStateAction<{ twitter: string; facebook: string }>\n  >;\n}\n\nexport const SignupFormContext = createContext<\n  SignupFormContextInterface | undefined\n>(undefined);\n\nexport function SignupFormProvider({ children }: SignupFormProviderType) {\n  const [profile, setProfile] = useState({\n    name: '',\n    email: '',\n  });\n  const [social, setSocial] = useState({\n    twitter: '',\n    facebook: '',\n  });\n\n  return (\n    <SignupFormContext.Provider\n      value={{\n        profile,\n        social,\n        setProfile,\n        setSocial,\n      }}\n    >\n      {children}\n    </SignupFormContext.Provider>\n  );\n}\n\nexport function useSignupForm() {\n  const context = useContext(SignupFormContext);\n  if (context === undefined) {\n    throw new Error('useSignupForm must be within SignupFormProvider');\n  }\n  return context;\n}\n","import { Button } from '@chakra-ui/react';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Animator from './Animator';\nimport { useSignupForm } from './SignupFormContext';\n\ntype DataFormType = {\n  name: string;\n  email: string;\n};\n\nexport default function ProfileForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const history = useHistory();\n\n  const { profile, setProfile } = useSignupForm();\n\n  function onSubmit(data: DataFormType) {\n    setProfile(data);\n\n    history.push('/social');\n  }\n\n  return (\n    <Animator>\n      <form className=\"wrap\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <h2>Tell us about yourself</h2>\n\n        <input\n          {...register('name', { required: true })}\n          type=\"text\"\n          placeholder=\"What's your name?\"\n          defaultValue={profile.name}\n        />\n        <p className=\"errorsValidate\">{errors.name && 'Name is required'}</p>\n\n        <input\n          {...register('email', {\n            required: true,\n            pattern:\n              /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n          })}\n          type=\"email\"\n          placeholder=\"What's your email?\"\n          defaultValue={profile.email}\n        />\n        <p className=\"errorsValidate\">\n          {errors.email ? 'Email is required' : ''}\n        </p>\n\n        <Button\n          colorScheme=\"teal\"\n          className=\"submit\"\n          type=\"submit\"\n          fontSize=\"4xl\"\n          w=\"150px\"\n        >\n          Next\n        </Button>\n      </form>\n    </Animator>\n  );\n}\n","import { Flex, Button } from '@chakra-ui/react';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Animator from './Animator';\nimport { useSignupForm } from './SignupFormContext';\n\ntype DataFormType = {\n  twitter: string;\n  facebook: string;\n};\n\nexport default function SocialForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const history = useHistory();\n\n  const { social, setSocial } = useSignupForm();\n\n  function onSubmit(data: DataFormType) {\n    setSocial(data);\n    history.push('/review');\n  }\n  function clickHandle() {\n    history.push('/');\n  }\n\n  return (\n    <Animator>\n      <form className=\"wrap\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <h2>How can we find you on social?</h2>\n\n        <input\n          {...register('twitter', { required: true })}\n          type=\"text\"\n          placeholder=\"What's your Twitter?\"\n          defaultValue={social.twitter}\n        />\n        <p className=\"errorsValidate\">\n          {errors.twitter && 'Twitter is required'}\n        </p>\n\n        <input\n          {...register('facebook', {\n            required: true,\n          })}\n          type=\"text\"\n          placeholder=\"What's your Facebook?\"\n          defaultValue={social.facebook}\n        />\n        <p className=\"errorsValidate\">\n          {errors.facebook ? 'Facebook is required' : ''}\n        </p>\n        <Flex w=\"100%\" justifyContent=\"flex-end\">\n          <Button\n            colorScheme=\"teal\"\n            marginRight=\"20px\"\n            onClick={() => clickHandle()}\n            fontSize=\"4xl\"\n            w=\"150px\"\n          >\n            Back\n          </Button>\n          <Button\n            colorScheme=\"teal\"\n            type=\"submit\"\n            fontSize=\"4xl\"\n            w=\"150px\"\n          >\n            Next\n          </Button>\n        </Flex>\n      </form>\n    </Animator>\n  );\n}\n","import React from 'react';\nimport { Flex, Button } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { useSignupForm } from './SignupFormContext';\nimport Animator from './Animator';\n\nexport default function Review() {\n  const { profile, social } = useSignupForm();\n  const history = useHistory();\n\n  function handleSubmit(e: React.SyntheticEvent) {\n    e.preventDefault();\n    alert('you are submitting! congrats!');\n  }\n\n  function clickHandle() {\n    history.push('/social');\n  }\n\n  return (\n    <Animator>\n      <form className=\"wrap\" onSubmit={handleSubmit}>\n        <h2>Review all your info</h2>\n        <p className=\"review__text\">\n          <strong>Name: </strong>\n          {profile.name}\n        </p>\n        <p className=\"review__text\">\n          <strong>Email: </strong>\n          {profile.email}\n        </p>\n        <p className=\"review__text\">\n          <strong>Twitter: </strong>\n          {social.twitter}\n        </p>\n        <p className=\"review__text\">\n          <strong>Facebook: </strong>\n          {social.facebook}\n        </p>\n        <Flex w=\"100%\" justifyContent=\"flex-end\">\n          <Button\n            colorScheme=\"teal\"\n            marginRight=\"20px\"\n            onClick={() => clickHandle()}\n            fontSize=\"4xl\"\n            w=\"150px\"\n          >\n            Back\n          </Button>\n          <Button\n            colorScheme=\"teal\"\n            className=\"submit\"\n            type=\"submit\"\n            fontSize=\"3xl\"\n            w=\"150px\"\n          >\n            Submit All Info\n          </Button>\n        </Flex>\n      </form>\n    </Animator>\n  );\n}\n","import React from 'react';\nimport { useSignupForm } from './SignupFormContext';\n\nexport default function StepLinks() {\n  const { profile, social } = useSignupForm();\n\n  const isProfileDone = !!profile.name.length && !!profile.email.length;\n  const isSocialDone = !!social.twitter.length && !!social.facebook.length;\n\n  return (\n    <div className=\"step-links\">\n      <span className=\"step-links__link active\">\n        {isProfileDone ? '💗 ' : '❤ '}\n        Profile\n      </span>\n\n      <span\n        className={\n            isProfileDone\n              ? 'step-links__link active'\n              : 'step-links__link'\n          }\n      >\n        {isSocialDone ? '💗' : '❤'}\n        Social\n      </span>\n\n      {isProfileDone && isSocialDone ? (\n        <span\n          className={\n            isProfileDone\n              ? 'step-links__link active'\n              : 'step-links__link'\n          }\n        >\n          Review\n        </span>\n\n      ) : (\n        <span className=\"step-links__link\">Review</span>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { useLocation, BrowserRouter as Switch, Route } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\nimport ProfileForm from './1ProfileForm';\nimport SocialForm from './2SocialForm';\nimport Review from './3Review';\nimport { SignupFormProvider } from './SignupFormContext';\nimport StepLinks from './StepLinks';\n\nexport default function SignupForm() {\n  const location = useLocation();\n\n  return (\n    <SignupFormProvider>\n      <StepLinks />\n      <div className=\"signup-form\">\n        <AnimatePresence>\n          <Switch key={location.pathname}>\n            <Route exact path=\"/\" render={() => <ProfileForm />} />\n            <Route path=\"/social\" render={() => <SocialForm />} />\n            <Route path=\"/review\" render={() => <Review />} />\n          </Switch>\n        </AnimatePresence>\n      </div>\n    </SignupFormProvider>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport SignupForm from './components/SignupForm/SignupForm';\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <SignupForm />\n      </BrowserRouter>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport App from './App';\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}